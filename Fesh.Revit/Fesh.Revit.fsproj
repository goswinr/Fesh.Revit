<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <Choose>
    <When Condition="'$(RevitVersion)' == '2025'">
      <PropertyGroup>
        <TargetFramework>net8.0-windows</TargetFramework>
      </PropertyGroup>
      <ItemGroup>
        <PackageReference Include="Autodesk.Revit.SDK" Version="2025.0.2.419" PrivateAssets="all" ExcludeAssets="runtime" />
      </ItemGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <TargetFramework>net48</TargetFramework>
      </PropertyGroup>
      <ItemGroup>
        <PackageReference Include="Autodesk.Revit.SDK" Version="2018.2.0.2001" PrivateAssets="all" ExcludeAssets="runtime" />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <PropertyGroup>
    <OutputType>Library</OutputType>
    <UseWPF>true</UseWPF>
    <UseWindowsForms>true</UseWindowsForms>    <!--inherited from Avalonedit ?-->

    <!-- <TargetFrameworks>net8.0-windows;net48</TargetFrameworks>-->  <!-- dependabot fails to build with multiple Target frameworks -->
    <!-- <TargetFramework>net48</TargetFramework>
    <TargetFramework Condition="'$(RevitVersion)' == '2025'" >net8.0-windows</TargetFramework>
      -->

    <LangVersion>preview</LangVersion>
    <NeutralLanguage>en</NeutralLanguage>
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>    <!--to only have the english resources-->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <FSharpCoreIncludeDocFileInOutput>true</FSharpCoreIncludeDocFileInOutput>
    <EnableWindowsTargeting>true</EnableWindowsTargeting> <!-- needed so that a GH action can run on linux ?-->

    <RootNamespace>Fesh.Revit</RootNamespace>
    <AssemblyName>Fesh.Revit</AssemblyName>
    <AssemblyTitle>Fesh.Revit</AssemblyTitle>
    <Title>Fesh.Revit</Title>
    <Product>Fesh.Revit</Product>

    <!-- <Version></Version> taken from CHANGELOG.md by Ionide.KeepAChangelog.Tasks -->
    <Authors>GoswinR</Authors>
    <Copyright>Goswin Rothenthal 2019</Copyright>
    <Description>A Scripting editor for F# in Revit.</Description>
    <ApplicationIcon>../Media/logo.ico</ApplicationIcon>
    <Win32Resource>Media32/logo.res</Win32Resource>    <!-- for Application Icon in explorer-->

    <!--needed to silence errors with Revit dlls?-->
    <!-- <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch> -->

    <OtherFlags>$(OtherFlags) --warnon:1182</OtherFlags>  <!-- 1182: warn on unused variables -->
    <ChangelogFile>../CHANGELOG.md</ChangelogFile>  <!-- for Ionide.KeepAChangelog.Tasks -->
    <PlatformTarget>x64</PlatformTarget>  <!-- x64 seems required by Revit, do not us just Platform tag-->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>  <!-- CopyLocalLockFileAssemblies is important! without this FSharp.Core fails to load in Revit 2025 on net8-windows -->

    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>    <!-- so that dependabot can update FSharp.Core-->
    <Configurations>Release</Configurations>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="FSharp.Core" Version="9.0.101" /> <!-- use 'Include' syntax so that dependabot can update FSharp.Core-->
    <PackageReference Include="Velopack" Version="0.0.1053" />
    <PackageReference Include="Ionide.KeepAChangelog.Tasks" Version="0.1.8" PrivateAssets="all" />
    <!-- <PackageReference Include="FSharp.Compiler.Service" Version="43.9.101" />
    <PackageReference Update="FSharp.Core" Version="9.0.101"  GeneratePathProperty="true"/> -->
    <!--this reference is needed for tooling only, it might not be installed on host PC. see also https://github.com/fsprojects/IfSharp/issues/213 -->
    <PackageReference Include="NETStandard.Library" Version="2.0.3" GeneratePathProperty="true" />
    <!-- <PackageReference Include="Autodesk.Revit.SDK" Version="2018.2.0.2001" Condition="'$(TargetFramework)' == 'net48'" PrivateAssets="all" ExcludeAssets="runtime" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2025.0.2.419" Condition="'$(TargetFramework)' == 'net8.0-windows'" PrivateAssets="all" ExcludeAssets="runtime" /> -->
    <PackageReference Include="Fesh" Version="0.21.0" GeneratePathProperty="true" />
    <!-- <ProjectReference Include="../Fesh/FeshHosting.fsproj" /> -->
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Media32/logo.res" />
    <Resource Include="Media32/logo.ico" />
    <Resource Include="Media32/logo16.png" />
    <Resource Include="Media32/logo32.png" />

    <Compile Include="Src/Velo.fs" />
    <Compile Include="Src/Addin.fs" />
    <Compile Include="Src/ScriptingSyntax.fs" />
  </ItemGroup>

  <!-- All these actions are only needed for local debugging, they are repeated in Fesh.Revit.Bootstrapper : -->
  <Target Name="AddXmlDocFilesToOutput" BeforeTargets="AfterBuild">

    <!--because <FSharpCoreIncludeDocFileInOutput>  does not seem to work -->
    <Copy SourceFiles="$(PkgFSharp_Core)/lib/netstandard2.0/FSharp.Core.xml" DestinationFiles="$(TargetDir)FSharp.Core.xml" ContinueOnError="false" />
    <Copy SourceFiles="$(PkgFesh)/lib/net472/Fesh.xml" DestinationFiles="$(TargetDir)Fesh.xml" ContinueOnError="false" />

    <!-- take latest SyntaxHighlightingFSharp.xshd from Fesh nuget.-->
    <Copy SourceFiles="$(PkgFesh)/SyntaxHighlightingFSharp.xshd" DestinationFiles="$(TargetDir)SyntaxHighlightingFSharp.xshd" ContinueOnError="false" />
    <!-- <Copy SourceFiles="../Fesh/Src/SyntaxHighlightingFSharp.xshd" DestinationFiles="$(TargetDir)SyntaxHighlightingFSharp.xshd" ContinueOnError="false" /> -->
  </Target>
</Project>